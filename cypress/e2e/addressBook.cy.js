/// <reference types="cypress" />
import addressBook from "../../pageObjects/addressBook"
import login from "../../pageObjects/login"
import register from "../../pageObjects/register"
import userTestData from "../fixtures/userTestData.json"

describe('User address book test', () => {
    beforeEach(() => {
        cy.login()
        addressBook.addressBookPage()
        cy.url().should('include', '/my-account/edit-address/')
    })

    it('Edit Billing Address - empty fields', () => {
        addressBook.addNewBillingAddressButton.should('be.visible')
        addressBook.addNewBillingAddressButton.click()
        cy.url().should('include', '/my-account/edit-address/billing/')
        addressBook.billingAddressEmailInputField.should('be.visible')
        addressBook.billingAddressEmailInputField.clear()
        addressBook.billingAddressFirstNameInputField.should('exist')
        addressBook.billingAddressFirstNameInputField.clear()
        addressBook.billingAddressLastNameInputField.should('exist')
        addressBook.billingAddressLastNameInputField.clear()
        addressBook.billingAddressStreetFirstLineInputField.should('exist')
        addressBook.billingAddressStreetFirstLineInputField.clear()
        addressBook.billingAddressStreetSecondLineInputField.should('exist')
        addressBook.billingAddressStreetSecondLineInputField.clear()
        addressBook.billingAddressCityInputField.should('exist')
        addressBook.billingAddressCityInputField.clear()
        addressBook.billingAddressPostCodeInputField.should('exist')
        addressBook.billingAddressPostCodeInputField.clear()
        addressBook.billingAddressPhoneNumberInputField.should('exist')
        addressBook.billingAddressPhoneNumberInputField.clear()
        addressBook.billingAddressEmailInputField.should('exist')
        addressBook.billingAddressEmailInputField.clear()
        addressBook.saveAddressButton.should('be.visible')
        addressBook.saveAddressButton.click()
        register.errorMessage.should('exist').and('contain.text', 'First name is a required field.')
        .and('contain.text', 'Last name is a required field.')
        .and('contain.text', 'Street address is a required field.')
        .and('contain.text', 'Town / City is a required field.')
        .and('contain.text', 'ZIP Code is a required field.')
        .and('contain.text', 'Phone is a required field.')
        .and('contain.text', 'Email address is a required field.') 
    })

    it('Edit Billing Address - success', () => {
        addressBook.addNewBillingAddressButton.should('be.visible')
        addressBook.addNewBillingAddressButton.click()
        cy.url().should('include', '/my-account/edit-address/billing/')
        addressBook.addressBookPageTitle.should('be.visible').and('contain.text', 'Billing address')
        addressBook.billingAddressFirstNameInputField.should('exist')
        addressBook.billingAddressFirstNameInputField.clear().type(userTestData.userCorrect.firstName)
        addressBook.billingAddressLastNameInputField.should('exist')
        addressBook.billingAddressLastNameInputField.clear().type(userTestData.userCorrect.lastName)
        addressBook.billingAddressContryRegionSelect.should('exist')
        addressBook.billingAddressContryRegionSelect.type('United States (US){enter}')
        addressBook.billingAddressStreetFirstLineInputField.should('exist')
        addressBook.billingAddressStreetFirstLineInputField.clear().type(userTestData.userCorrect.addressFirstLine)
        addressBook.billingAddressStreetSecondLineInputField.should('exist')
        addressBook.billingAddressStreetSecondLineInputField.clear().type(userTestData.userCorrect.addressSecondLine)
        addressBook.billingAddressCityInputField.should('exist')
        addressBook.billingAddressCityInputField.clear().type(userTestData.userCorrect.city)
        addressBook.billingAddressStateSelect.should('exist')
        addressBook.billingAddressStateSelect.type('Kentucky{enter}')
        addressBook.billingAddressPostCodeInputField.should('exist')
        addressBook.billingAddressPostCodeInputField.clear().type(userTestData.userCorrect.postCode)
        addressBook.billingAddressPhoneNumberInputField.should('exist')
        addressBook.billingAddressPhoneNumberInputField.clear().type(userTestData.userCorrect.phoneNumber)
        addressBook.billingAddressEmailInputField.should('exist')
        addressBook.billingAddressEmailInputField.clear().type(userTestData.userCorrect.mailAddress)
        addressBook.saveAddressButton.should('exist')
        addressBook.saveAddressButton.click()
        login.resetPasswordSuccessMessage.should('exist').and('contain.text', 'Address changed successfully.')   
    })

    it('Edit Shipping Address - empty fields', () => {
        addressBook.addNewShippingAddressButton.should('be.visible')
        addressBook.addNewShippingAddressButton.click()
        cy.url().should('include', '/my-account/edit-address/shipping/')
        addressBook.addressBookPageTitle.should('be.visible').and('contain.text', 'Shipping address')
        addressBook.shippingFirstNameInputField.should('exist')
        addressBook.shippingFirstNameInputField.should('exist').clear()
        addressBook.shippingLastNameInputField.should('exist')
        addressBook.shippingLastNameInputField.should('exist').clear()
        addressBook.shippingCompanyNameInputField.should('exist')
        addressBook.shippingCompanyNameInputField.should('exist').clear()
        addressBook.shippingAddressFirstLineInputField.should('exist')
        addressBook.shippingAddressFirstLineInputField.should('exist').clear()
        addressBook.shippingAddressSecondLineInputField.should('exist')
        addressBook.shippingAddressSecondLineInputField.should('exist').clear()
        addressBook.shippingAddressCityInputField.should('exist')
        addressBook.shippingAddressCityInputField.should('exist').clear()
        addressBook.shippingAddressCountrySelect.should('exist')
        addressBook.shippingPostCodeInputField.should('exist')
        addressBook.shippingPostCodeInputField.should('exist').clear()
        addressBook.saveAddressButton.should('be.visible')
        addressBook.saveAddressButton.click()
        register.errorMessage.should('exist').and('contain.text', 'First name is a required field.')
        .and('contain.text', 'Last name is a required field.')
        .and('contain.text', 'Country / Region is a required field.')
        .and('contain.text', 'Street address is a required field.')
        .and('contain.text', 'Town / City is a required field.')
        .and('contain.text', 'State is a required field.')
        .and('contain.text', 'PIN Code is a required field.')
    })

    it('Edit Shipping Address - success', () => {
        addressBook.addNewShippingAddressButton.should('be.visible')
        addressBook.addNewShippingAddressButton.click()
        cy.url().should('include', '/my-account/edit-address/shipping/')
        addressBook.addressBookPageTitle.should('be.visible').and('contain.text', 'Shipping address')
        addressBook.shippingFirstNameInputField.should('exist')
        addressBook.shippingFirstNameInputField.clear().type(userTestData.userCorrect.firstName)
        addressBook.shippingLastNameInputField.should('exist')
        addressBook.shippingLastNameInputField.clear().type(userTestData.userCorrect.lastName)
        addressBook.shippingCompanyNameInputField.should('exist')
        addressBook.shippingCompanyNameInputField.clear().type(userTestData.userCorrect.companyName)
        addressBook.shippingAddressCountrySelect.should('exist')
        addressBook.shippingAddressCountrySelect.type('United States (US){enter}')
        addressBook.shippingAddressFirstLineInputField.should('exist')
        addressBook.shippingAddressFirstLineInputField.clear().type(userTestData.userCorrect.addressFirstLine)
        addressBook.shippingAddressSecondLineInputField.should('exist')
        addressBook.shippingAddressSecondLineInputField.clear().type(userTestData.userCorrect.addressSecondLine)
        addressBook.shippingAddressCityInputField.should('exist')
        addressBook.shippingAddressCityInputField.clear().type(userTestData.userCorrect.city)
        addressBook.shippingAddressStateSelect.should('exist')
        addressBook.shippingAddressStateSelect.type('Kentucky{enter}')
        addressBook.shippingPostCodeInputField.should('exist')
        addressBook.shippingPostCodeInputField.clear().type(userTestData.userCorrect.postCode)
        addressBook.saveAddressButton.should('be.visible')
        addressBook.saveAddressButton.click()
        login.resetPasswordSuccessMessage.should('exist').and('contain.text', 'Address changed successfully.')   
    })
})