import checkout from "../../pageObjects/checkout"
import productPage from "../../pageObjects/productPage"
import cart from "../../pageObjects/cart"
import login from "../../pageObjects/login"
import register from "../../pageObjects/register"
import addressBook from "../../pageObjects/addressBook"
import userTestData from "../fixtures/userTestData.json"

describe('Checkout tests', () => {
    beforeEach(() => {
        cy.login()
        cy.addToCart()
        checkout.checkoutPageLink()
        cy.url().should('include', '/checkout/')
        cart.pageTitle.should('be.visible').and('contain.text', 'Checkout')
        productPage.pageBreadCrumbs.should('exist').and('contain.text', 'Checkout')
    })

    it('Empty cart checkout', () => {
        cart.cartPageLink()
        cy.url().should('include', '/cart/')
        cart.deleteProductFromCartButton.should('exist')
        cart.deleteProductFromCartButton.click()
        login.resetPasswordSuccessMessage.should('exist').and('contain.text', ' removed')
        checkout.checkoutPageLink()
        cy.url().should('include', '/cart/')
        checkout.emptyCheckoutInfo.should('exist').and('contain.text', 'Checkout is not available whilst your cart is empty.')
    })

    it('Checkout coupon', () => {
        cy.url().should('include', '/checkout/')
        cart.pageTitle.should('be.visible').and('contain.text', 'Checkout')
        productPage.pageBreadCrumbs.should('exist').and('contain.text', 'Checkout')
        checkout.emptyCheckoutInfo.should('exist').and('contain.text', 'Have a coupon? Click here to enter your code')
        checkout.showCouponInputField.should('exist')
        checkout.showCouponInputField.click()
        checkout.couponBlock.should('exist').and('contain.text', 'If you have a coupon code, please apply it below.')
        checkout.couponInputField.should('exist')
        checkout.couponInputField.clear()
        checkout.applyCouponButton.should('exist')
        checkout.applyCouponButton.click()
        register.errorMessage.should('exist').and('contain.text', 'Please enter a coupon code.')
        checkout.showCouponInputField.should('exist')
        checkout.showCouponInputField.click()
        checkout.couponInputField.type('test_code')
        checkout.applyCouponButton.should('exist')
        checkout.applyCouponButton.click()
        register.errorMessage.should('exist').and('contain.text', 'Coupon "test_code" does not exist!')
    })

    it('Checkout empty billing fields', () => {
        cy.url().should('include', '/checkout/')
        cart.pageTitle.should('be.visible').and('contain.text', 'Checkout')
        productPage.pageBreadCrumbs.should('exist').and('contain.text', 'Checkout')
        checkout.billingFields.should('exist').and('contain.text', 'Billing details')
        addressBook.billingAddressFirstNameInputField.should('exist')
        addressBook.billingAddressFirstNameInputField.clear()
        addressBook.billingAddressLastNameInputField.should('exist')
        addressBook.billingAddressLastNameInputField.clear()
        addressBook.billingAddressStreetFirstLineInputField.should('exist')
        addressBook.billingAddressStreetFirstLineInputField.clear()
        addressBook.billingAddressStreetSecondLineInputField.should('exist')
        addressBook.billingAddressStreetSecondLineInputField.clear()
        addressBook.billingAddressCityInputField.should('exist')
        addressBook.billingAddressCityInputField.clear()
        addressBook.billingAddressPostCodeInputField.should('exist')
        addressBook.billingAddressPostCodeInputField.clear()
        addressBook.billingAddressPhoneNumberInputField.should('exist')
        addressBook.billingAddressPhoneNumberInputField.clear()
        addressBook.billingAddressEmailInputField.should('exist')
        addressBook.billingAddressEmailInputField.clear()
        checkout.placeOrderButton.should('exist')
        checkout.placeOrderButton.click()
        register.errorMessage.should('exist').and('contain.text', 'First name is a required field.')
            .and('contain.text', 'Last name is a required field.')
            .and('contain.text', 'Street address is a required field.')
            .and('contain.text', 'Town / City is a required field.')
            .and('contain.text', 'ZIP Code is a required field.')
            .and('contain.text', 'Phone is a required field.')
            .and('contain.text', 'Email address is a required field.')
            .and('contain.text', 'Please read and accept the terms and conditions to proceed with your order.')
    })

    it('Checkout place order', () => {
        cy.url().should('include', '/checkout/')
        cart.pageTitle.should('be.visible').and('contain.text', 'Checkout')
        productPage.pageBreadCrumbs.should('exist').and('contain.text', 'Checkout')
        addressBook.billingAddressFirstNameInputField.should('exist')
        addressBook.billingAddressFirstNameInputField.clear().type(userTestData.userCorrect.firstName)
        addressBook.billingAddressLastNameInputField.should('exist')
        addressBook.billingAddressLastNameInputField.clear().type(userTestData.userCorrect.lastName)
        addressBook.billingAddressStreetFirstLineInputField.should('exist')
        addressBook.billingAddressStreetFirstLineInputField.clear().type(userTestData.userCorrect.addressFirstLine)
        addressBook.billingAddressStreetSecondLineInputField.should('exist')
        addressBook.billingAddressStreetSecondLineInputField.clear().type(userTestData.userCorrect.addressSecondLine)
        addressBook.billingAddressCityInputField.should('exist')
        addressBook.billingAddressCityInputField.clear().type(userTestData.userCorrect.city)
        addressBook.billingAddressPostCodeInputField.should('exist')
        addressBook.billingAddressPostCodeInputField.clear().type(userTestData.userCorrect.postCode)
        addressBook.billingAddressPhoneNumberInputField.should('exist')
        addressBook.billingAddressPhoneNumberInputField.clear().type(userTestData.userCorrect.phoneNumber)
        addressBook.billingAddressEmailInputField.should('exist')
        addressBook.billingAddressEmailInputField.clear().type(userTestData.userCorrect.mailAddress)
        checkout.additionalInformationsBlock.should('exist').and('contain.text', 'Additional information')
        checkout.orderCommentInputField.should('exist')
        checkout.orderCommentInputField.type(userTestData.userCorrect.companyName)
        checkout.termsCheckbox.should('exist')
        checkout.termsCheckbox.check()
        checkout.termsCheckbox.should('be.checked')
        checkout.placeOrderButton.should('exist')
        checkout.placeOrderButton.click()
        cy.url().should('include', '/checkout/order-received/')
        checkout.receivedOrderSummary.should('exist').and('contain.text', 'Thank you. Your order has been received.')
        checkout.receivedOrderSummary.should('exist').and('contain.text', userTestData.userCorrect.companyName)
    })
})